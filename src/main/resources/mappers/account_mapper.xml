<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aws.compass.repository.AccountMapper">
    <resultMap id="userMap" type="com.aws.compass.entity.User">
        <id property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="oauth2Id" column="oauth2_id"/>
        <result property="name" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="phone" column="phone"/>
        <result property="provider" column="provider"/>
        <result property="enabled" column="enabled"/>
        <result property="roleId" column="role_id"/>

    </resultMap>
    <insert id="insertLike">
        insert into like_tb
        values(0, #{userId}, #{academyId})
    </insert>
    <update id="updateUser">
        update
            user_tb
        set
            email = #{email},
            name = #{name},
            nickname = #{nickname},
            phone = #{phone}
        where
            user_id = #{userId}
    </update>
    <update id="updateEnabledToEmail">
        update
            user_tb
        set
            enabled = 1
        where
            email = #{email}
    </update>
    <delete id="deleteLike">
        delete
        from
            like_tb
        where
            user_id = #{userId}
            and ACADEMY_ID = #{academyId}

    </delete>
    <select id="findUserByEmail" resultMap="userMap">
        select
            user_id,
            email,
            oauth2_id,
            name,
            nickname,
            phone,
            provider,
            enabled,
            role_id
        from
            user_tb
        where
            email = #{email}
    </select>
    <select id="checkDuplicateAndIdNot"
            parameterType="com.aws.compass.entity.User"
            resultType="java.lang.Integer">
        select
            (select
                if(count(*) > 0, 1, 0)
            from
                user_tb
            where
                email = #{email}
                and user_id != #{userId}
            )
            + (select
                if(count(*) > 0, 2, 0)
            from
                user_tb
            where
                nickname = #{nickname}
                and user_id != #{userId}
            ) as result
    </select>

    <select id="getLikeState"
            resultType="java.lang.Integer">
        select
            count(*)
        from
            like_tb
        where
            user_id = #{userId}
            and ACADEMY_ID = #{academyId}

    </select>

    <select id="getLikeCountByUserId"
            resultType="java.lang.Integer">
        select
            count(*)
        from
            like_tb
        where
            user_id = #{userId}
    </select>
    <select id="getLikeAcademies"
            resultType="com.aws.compass.entity.Academy">
        select
            at.ACADEMY_ID,
            at.ACA_NM,
            at.REALM_SC_NM,
            at.FA_RDNMA,
            ait.logo_img
        from
            like_tb lt
            left outer join academy_tb at on(at.academy_id = lt.academy_id)
            left outer join academy_info_tb ait on(ait.academy_id = lt.academy_id)
        where
            lt.user_id = #{userId}

    </select>
    <select id="getLikeCountByAcademyId"
            resultType="java.lang.Integer">
        select
            count(*)
        from
            like_tb
        where
            academy_id = #{academyId}
    </select>


    <!--    <select id="getLikeAcademiesByUserId"-->
<!--            resultType="com.aws.compass.entity.AcademyRegistration">-->
<!--        select-->
<!--            aca_nm-->
<!--        from-->
<!--            like_tb-->
<!--        where-->
<!--            user_id = #{userId}-->
<!--    </select>-->

</mapper>